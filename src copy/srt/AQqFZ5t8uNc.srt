1
00:00:00,560 --> 00:00:03,410

[Music]

2
00:00:03,410 --> 00:00:06,140
[Applause]

3
00:00:06,140 --> 00:00:12,249
[Music]

4
00:00:12,259 --> 00:00:15,269
hey folks my name is addy osmani and

5
00:00:15,269 --> 00:00:17,730
welcome to optimizing for core web

6
00:00:17,730 --> 00:00:20,220
vitals so today we're going to talk

7
00:00:20,220 --> 00:00:22,650
about optimizing user experiences on the

8
00:00:22,650 --> 00:00:25,769
web with a case study on French luxury

9
00:00:25,769 --> 00:00:28,529
fashion house Chloe Chloe we've recently

10
00:00:28,529 --> 00:00:30,359
been taking a fresh look at web

11
00:00:30,359 --> 00:00:32,250
performance and I'm really excited to

12
00:00:32,250 --> 00:00:33,930
share their learnings with you now you

13
00:00:33,930 --> 00:00:36,329
may have seen Google search announced an

14
00:00:36,329 --> 00:00:38,489
upcoming search ranking change recently

15
00:00:38,489 --> 00:00:40,800
that incorporates page experience

16
00:00:40,800 --> 00:00:43,079
metrics now these metrics include the

17
00:00:43,079 --> 00:00:45,510
core web vitals which together with a

18
00:00:45,510 --> 00:00:47,160
few other signals paint a pretty

19
00:00:47,160 --> 00:00:49,620
holistic picture about the quality of

20
00:00:49,620 --> 00:00:52,530
user experiences on a page but what are

21
00:00:52,530 --> 00:00:54,690
the core Web vitals and how do you go

22
00:00:54,690 --> 00:00:57,210
about optimizing for them well or web

23
00:00:57,210 --> 00:00:59,489
vitals are a set of metrics related to

24
00:00:59,489 --> 00:01:02,489
speed responsiveness and visual

25
00:01:02,489 --> 00:01:05,040
stability now these three aspects of

26
00:01:05,040 --> 00:01:07,770
user experience are measured using three

27
00:01:07,770 --> 00:01:11,070
metrics so first of all we have largest

28
00:01:11,070 --> 00:01:12,960
content full paint which measures

29
00:01:12,960 --> 00:01:14,970
loading performance next up we have

30
00:01:14,970 --> 00:01:17,030
first input delay which measures

31
00:01:17,030 --> 00:01:19,409
interactivity and last we've got

32
00:01:19,409 --> 00:01:21,509
cumulative layout shift which measures

33
00:01:21,509 --> 00:01:23,939
layout stability let's kick things off

34
00:01:23,939 --> 00:01:26,100
by talking about cumulative layout shift

35
00:01:26,100 --> 00:01:29,850
or CLS now CLS is a pretty important

36
00:01:29,850 --> 00:01:31,650
metric for measuring visual stability

37
00:01:31,650 --> 00:01:33,659
because it helps quantify all those

38
00:01:33,659 --> 00:01:36,090
times when we see really surprising

39
00:01:36,090 --> 00:01:39,810
shifts in the content on page it helps

40
00:01:39,810 --> 00:01:41,579
make sure that the page is as delightful

41
00:01:41,579 --> 00:01:44,729
as possible have you ever been reading

42
00:01:44,729 --> 00:01:48,540
like an article online when all of a

43
00:01:48,540 --> 00:01:51,930
sudden something suddenly changes on the

44
00:01:51,930 --> 00:01:55,649
page and without warning the text moves

45
00:01:55,649 --> 00:01:57,619
and you've lost your place

46
00:01:57,619 --> 00:02:01,020
that's literally what happens a giant

47
00:02:01,020 --> 00:02:04,380
chicken kicks your content away and he

48
00:02:04,380 --> 00:02:06,570
has no regrets look at him he's

49
00:02:06,570 --> 00:02:09,899
basically CLS so what causes poor CLS

50
00:02:09,899 --> 00:02:11,970
well first of all we've got images

51
00:02:11,970 --> 00:02:14,560
without dimension

52
00:02:14,560 --> 00:02:17,080
adds embeds or iframes without

53
00:02:17,080 --> 00:02:19,990
dimensions dynamically injected content

54
00:02:19,990 --> 00:02:22,930
and web fonts that might cause a flash

55
00:02:22,930 --> 00:02:26,470
of unstyled content now as I mentioned

56
00:02:26,470 --> 00:02:29,260
Chloe is a French luxury fashion house

57
00:02:29,260 --> 00:02:31,030
and it's become a bit of a go-to brand

58
00:02:31,030 --> 00:02:33,100
not just for like luxury apparel but

59
00:02:33,100 --> 00:02:35,440
also handbags and fragrances and things

60
00:02:35,440 --> 00:02:37,990
like that and they have recently been

61
00:02:37,990 --> 00:02:40,150
focused on improving cumulative layout

62
00:02:40,150 --> 00:02:42,820
shift on all their like main pages so

63
00:02:42,820 --> 00:02:45,130
their home page their product listings

64
00:02:45,130 --> 00:02:47,310
page and their product details page

65
00:02:47,310 --> 00:02:49,270
through a bunch of work they've been

66
00:02:49,270 --> 00:02:51,430
able to reduce their CLS all the way

67
00:02:51,430 --> 00:02:53,980
down to zero which is about as perfect

68
00:02:53,980 --> 00:02:56,140
as you can get so how did they get here

69
00:02:56,140 --> 00:02:58,750
this is the before view of the Cloe

70
00:02:58,750 --> 00:03:00,940
homepage where we can observe a number

71
00:03:00,940 --> 00:03:03,160
of surprising layout shifts due to

72
00:03:03,160 --> 00:03:05,740
elements on the page not following CLS

73
00:03:05,740 --> 00:03:08,860
best practices so let's dive into a few

74
00:03:08,860 --> 00:03:11,080
tips that worked well here first off

75
00:03:11,080 --> 00:03:13,510
always include width and height size

76
00:03:13,510 --> 00:03:15,520
attributes on your images and video

77
00:03:15,520 --> 00:03:18,100
elements alternatively you can always do

78
00:03:18,100 --> 00:03:20,560
things like reserve the required space

79
00:03:20,560 --> 00:03:23,950
with CSS aspect ratio boxes but in

80
00:03:23,950 --> 00:03:25,360
general this approach just make sure

81
00:03:25,360 --> 00:03:27,370
that the browser can allocate the

82
00:03:27,370 --> 00:03:29,140
correct amount of space in the document

83
00:03:29,140 --> 00:03:31,090
while the image is loading so here's a

84
00:03:31,090 --> 00:03:33,670
demo of this in action these are some

85
00:03:33,670 --> 00:03:35,850
images that don't have width and height

86
00:03:35,850 --> 00:03:38,260
specified and what you see happening is

87
00:03:38,260 --> 00:03:40,210
that they're pushing content in the page

88
00:03:40,210 --> 00:03:42,820
all the way down this is something

89
00:03:42,820 --> 00:03:44,680
that's reflected in our tools like

90
00:03:44,680 --> 00:03:46,270
lighthouse and I've got a little bit of

91
00:03:46,270 --> 00:03:47,530
a clip out here you can see the

92
00:03:47,530 --> 00:03:49,600
lighthouse report where CLS is in the

93
00:03:49,600 --> 00:03:51,610
red and not quite where we want it to be

94
00:03:51,610 --> 00:03:54,760
so how do we address this well in the

95
00:03:54,760 --> 00:03:57,550
early days of the web developers would

96
00:03:57,550 --> 00:04:00,250
add width and height attributes all over

97
00:04:00,250 --> 00:04:01,690
the place they'd add them to their image

98
00:04:01,690 --> 00:04:04,030
tags they make sure that they kept

99
00:04:04,030 --> 00:04:05,800
enough space allocated on the page

100
00:04:05,800 --> 00:04:08,140
before browsers would start fetching

101
00:04:08,140 --> 00:04:10,390
images that was great because it would

102
00:04:10,390 --> 00:04:13,060
minimize reflow and relay out

103
00:04:13,060 --> 00:04:16,630
now when responsive web design was

104
00:04:16,630 --> 00:04:18,970
introduced developers began to omit

105
00:04:18,970 --> 00:04:20,739
these width and height attributes and

106
00:04:20,739 --> 00:04:23,380
they started to use CSS to resize their

107
00:04:23,380 --> 00:04:25,060
images instead

108
00:04:25,060 --> 00:04:26,919
one of the downsides to this approach is

109
00:04:26,919 --> 00:04:28,930
that space could only be allocated for

110
00:04:28,930 --> 00:04:31,360
an image once it began to download and

111
00:04:31,360 --> 00:04:33,850
you know at that point the browser could

112
00:04:33,850 --> 00:04:36,850
determine its dimensions as images load

113
00:04:36,850 --> 00:04:39,580
in in that old world you know the page

114
00:04:39,580 --> 00:04:42,130
would reflow was each image appears on

115
00:04:42,130 --> 00:04:44,919
the screen and a lot of us got used to

116
00:04:44,919 --> 00:04:47,470
you know our text suddenly popping down

117
00:04:47,470 --> 00:04:49,540
the screen which wasn't a very great

118
00:04:49,540 --> 00:04:52,030
user experience and this is where your

119
00:04:52,030 --> 00:04:55,000
aspect ratio comes in so the aspect

120
00:04:55,000 --> 00:04:57,760
ratio of an image is the ratio of its

121
00:04:57,760 --> 00:05:00,280
width to its height it's pretty common

122
00:05:00,280 --> 00:05:02,350
to see this expressed as two numbers

123
00:05:02,350 --> 00:05:05,650
separated by a colon so for example 16

124
00:05:05,650 --> 00:05:09,760
colon 9 or 4 colon 3 for an x colon y

125
00:05:09,760 --> 00:05:13,000
aspect ratio the image is X units wide

126
00:05:13,000 --> 00:05:16,270
and Y units hide what that means is that

127
00:05:16,270 --> 00:05:18,820
if we know one of the dimensions the

128
00:05:18,820 --> 00:05:21,580
other one can be determined so for a 16

129
00:05:21,580 --> 00:05:25,889
to 9 aspect ratio if dress jpg has got a

130
00:05:25,889 --> 00:05:30,430
360 PX height the width is 360

131
00:05:30,430 --> 00:05:34,289
multiplied by 16 over 9 which gives us

132
00:05:34,289 --> 00:05:36,270
640 PX

133
00:05:36,270 --> 00:05:39,760
I'm not very good at math so hopefully

134
00:05:39,760 --> 00:05:40,419
that was helpful

135
00:05:40,419 --> 00:05:44,530
now modern browsers now set the default

136
00:05:44,530 --> 00:05:46,810
aspect ratio of images based on an

137
00:05:46,810 --> 00:05:49,450
images width and height attributes so

138
00:05:49,450 --> 00:05:51,940
it's really valuable to set them if you

139
00:05:51,940 --> 00:05:54,460
want to avoid those layout shifts this

140
00:05:54,460 --> 00:05:56,680
is a change in modern browsers and it's

141
00:05:56,680 --> 00:05:58,389
all thanks to the CSS working group

142
00:05:58,389 --> 00:06:00,310
they've done some work that basically

143
00:06:00,310 --> 00:06:02,590
allows us to just set width and height

144
00:06:02,590 --> 00:06:05,320
as normal and this calculates an aspect

145
00:06:05,320 --> 00:06:07,210
ratio based on the width and height the

146
00:06:07,210 --> 00:06:09,789
attributes before the image is loaded so

147
00:06:09,789 --> 00:06:11,560
what we're seeing on screen here this is

148
00:06:11,560 --> 00:06:13,389
something that's added to the default

149
00:06:13,389 --> 00:06:16,510
style sheet of all browsers and it

150
00:06:16,510 --> 00:06:18,340
calculates aspect ratio based on the

151
00:06:18,340 --> 00:06:20,860
elements width and height attributes so

152
00:06:20,860 --> 00:06:23,080
as long as you're providing width and

153
00:06:23,080 --> 00:06:25,180
height the aspect ratio can be

154
00:06:25,180 --> 00:06:27,280
calculated and everything will will

155
00:06:27,280 --> 00:06:29,440
hopefully avoid layout shifts so this is

156
00:06:29,440 --> 00:06:30,850
a great best practice to be following

157
00:06:30,850 --> 00:06:32,740
this is also something that works well

158
00:06:32,740 --> 00:06:35,729
with responsive images so with

159
00:06:35,729 --> 00:06:38,879
set your generally defining images that

160
00:06:38,879 --> 00:06:40,740
you want to allow the browser to select

161
00:06:40,740 --> 00:06:42,900
between you need to find sizes for those

162
00:06:42,900 --> 00:06:45,569
images to make sure that your image

163
00:06:45,569 --> 00:06:47,969
width and height attributes can be set

164
00:06:47,969 --> 00:06:50,490
just make sure that each image is using

165
00:06:50,490 --> 00:06:54,449
the same aspect ratio and here's that

166
00:06:54,449 --> 00:06:56,639
demo once again width width and height

167
00:06:56,639 --> 00:06:59,129
attributes added notice that in a modern

168
00:06:59,129 --> 00:07:01,349
browser you won't see any layout shifts

169
00:07:01,349 --> 00:07:03,089
there and the user will get a much more

170
00:07:03,089 --> 00:07:04,620
pleasant experience

171
00:07:04,620 --> 00:07:07,080
so another reminder set those width and

172
00:07:07,080 --> 00:07:08,639
height attributes as much as you can

173
00:07:08,639 --> 00:07:10,469
here's the impact that this change has

174
00:07:10,469 --> 00:07:12,389
on lighthouse as we can see before we

175
00:07:12,389 --> 00:07:15,749
went from a CLS of 0.36 so we're in the

176
00:07:15,749 --> 00:07:17,520
red all the way back to something that's

177
00:07:17,520 --> 00:07:19,289
a little bit better there one or two

178
00:07:19,289 --> 00:07:20,789
other things in this page that could

179
00:07:20,789 --> 00:07:22,589
have been improved but on the whole

180
00:07:22,589 --> 00:07:24,449
we've had a relatively significant

181
00:07:24,449 --> 00:07:26,639
impact on reducing layout shift you

182
00:07:26,639 --> 00:07:28,740
might be wondering how can I figure out

183
00:07:28,740 --> 00:07:30,719
what elements on my page are

184
00:07:30,719 --> 00:07:32,520
contributing to CLS

185
00:07:32,520 --> 00:07:35,460
we've got you covered so in lighthouse

186
00:07:35,460 --> 00:07:38,309
we have an avoid large layout shifts

187
00:07:38,309 --> 00:07:40,589
audit that highlights the top Dom

188
00:07:40,589 --> 00:07:43,110
elements contributing most of the CLS to

189
00:07:43,110 --> 00:07:46,199
the page so check out that audit in dev

190
00:07:46,199 --> 00:07:48,089
tools we also have a good story here so

191
00:07:48,089 --> 00:07:49,830
if you're using the dev tools

192
00:07:49,830 --> 00:07:52,349
performance panel it has an experience

193
00:07:52,349 --> 00:07:53,969
section that can help you detect

194
00:07:53,969 --> 00:07:56,789
unexpected layout shifts super helpful

195
00:07:56,789 --> 00:07:58,919
for finding and fixing visual

196
00:07:58,919 --> 00:08:01,349
instability issues they highlighted in

197
00:08:01,349 --> 00:08:03,419
this experience section with some kind

198
00:08:03,419 --> 00:08:05,909
of reddish pinkish layout shift records

199
00:08:05,909 --> 00:08:07,559
and if you click on one of those records

200
00:08:07,559 --> 00:08:09,300
we'll be able to get more details about

201
00:08:09,300 --> 00:08:12,180
you know what was the score where did

202
00:08:12,180 --> 00:08:14,729
this element move to and from really

203
00:08:14,729 --> 00:08:16,589
great diagnostics to help you nail down

204
00:08:16,589 --> 00:08:19,709
how to fix your CLS so khloe's approach

205
00:08:19,709 --> 00:08:21,270
to image loading is that they use a

206
00:08:21,270 --> 00:08:24,089
skeleton pattern with a SAS CSS mixin

207
00:08:24,089 --> 00:08:25,379
called bruschetta

208
00:08:25,379 --> 00:08:29,430
loading bruschetta is one of those

209
00:08:29,430 --> 00:08:30,959
things that are a little bit of a luxury

210
00:08:30,959 --> 00:08:33,300
term ager in quarantine they're they're

211
00:08:33,300 --> 00:08:35,729
right up there with toilet paper and

212
00:08:35,729 --> 00:08:38,550
antibacterial soap but let's stick with

213
00:08:38,550 --> 00:08:41,279
bruschetta loading so this is Chloe's

214
00:08:41,279 --> 00:08:43,260
approach to image loading they have a

215
00:08:43,260 --> 00:08:46,319
parent container with a color similar to

216
00:08:46,319 --> 00:08:49,199
the final image that's being loaded now

217
00:08:49,199 --> 00:08:50,010
lo that Lisa

218
00:08:50,010 --> 00:08:52,530
strategies like this where you have a

219
00:08:52,530 --> 00:08:54,750
little bit of a preview of what's

220
00:08:54,750 --> 00:08:56,520
finally gonna be shown are sometimes

221
00:08:56,520 --> 00:08:58,290
referred to as low quality image

222
00:08:58,290 --> 00:09:00,690
placeholders you can use a you know a

223
00:09:00,690 --> 00:09:03,450
predominant color from the final image

224
00:09:03,450 --> 00:09:05,970
you can use a low resolution image

225
00:09:05,970 --> 00:09:08,310
sometimes people will use like a 1 pixel

226
00:09:08,310 --> 00:09:10,410
by 1 pixel image or something like 10

227
00:09:10,410 --> 00:09:12,270
pixels by 10 pixel something very low

228
00:09:12,270 --> 00:09:13,950
resolution that just gives you a preview

229
00:09:13,950 --> 00:09:15,980
of what's finally going to be displayed

230
00:09:15,980 --> 00:09:20,040
now lazy loading strategies like this

231
00:09:20,040 --> 00:09:21,780
which either use a color or that kind of

232
00:09:21,780 --> 00:09:25,290
placeholder they don't strictly improve

233
00:09:25,290 --> 00:09:27,120
largest content full paint but they do

234
00:09:27,120 --> 00:09:29,010
improve perceived performance so they

235
00:09:29,010 --> 00:09:30,450
can still be pretty good for the user

236
00:09:30,450 --> 00:09:32,580
experience now

237
00:09:32,580 --> 00:09:34,350
what Chloe did here in addition to using

238
00:09:34,350 --> 00:09:36,900
this skeleton loading approach was that

239
00:09:36,900 --> 00:09:39,090
they do use responsive images and they

240
00:09:39,090 --> 00:09:40,500
do make sure that they're setting

241
00:09:40,500 --> 00:09:42,810
dimensions on their images as well to

242
00:09:42,810 --> 00:09:45,300
avoid CLS let's shift up and things up

243
00:09:45,300 --> 00:09:47,940
chef things up let's go on to the next

244
00:09:47,940 --> 00:09:50,970
tip so reserve enough space for any of

245
00:09:50,970 --> 00:09:53,880
your dynamic content things like ads or

246
00:09:53,880 --> 00:09:57,300
promos ideally you want to make sure

247
00:09:57,300 --> 00:09:59,550
that you were giving any of that content

248
00:09:59,550 --> 00:10:01,710
a container that it's not going to just

249
00:10:01,710 --> 00:10:04,290
you know bounce out of and suddenly

250
00:10:04,290 --> 00:10:07,500
cause shifts in the page a related tip

251
00:10:07,500 --> 00:10:10,740
to this one is avoid inserting new

252
00:10:10,740 --> 00:10:13,830
content above existing content unless

253
00:10:13,830 --> 00:10:16,170
it's in reaction to a user interaction

254
00:10:16,170 --> 00:10:18,330
you want to make sure that any layout

255
00:10:18,330 --> 00:10:20,640
shifts in your page are ones that you

256
00:10:20,640 --> 00:10:22,710
are making a conscious decision around

257
00:10:22,710 --> 00:10:25,950
and like occur as as expected so let's

258
00:10:25,950 --> 00:10:27,960
try to visualize this here's an example

259
00:10:27,960 --> 00:10:31,080
of a promo where we're dynamically

260
00:10:31,080 --> 00:10:32,400
injected into the page

261
00:10:32,400 --> 00:10:34,650
we haven't reserved space and it's just

262
00:10:34,650 --> 00:10:37,200
pushed everything all the way down we

263
00:10:37,200 --> 00:10:38,940
can see this reflected in our lighthouse

264
00:10:38,940 --> 00:10:41,310
call-out at the bottom of the screen now

265
00:10:41,310 --> 00:10:42,870
this is something that very typically

266
00:10:42,870 --> 00:10:46,410
happens with ads Ifrah iframes

267
00:10:46,410 --> 00:10:49,440
promos and these types of assets can

268
00:10:49,440 --> 00:10:51,330
sometimes be the largest contributors to

269
00:10:51,330 --> 00:10:54,000
layout shifts on the web now many ad

270
00:10:54,000 --> 00:10:56,220
networks and publishers will often

271
00:10:56,220 --> 00:11:00,150
support dynamic ad sizes and ad sizes

272
00:11:00,150 --> 00:11:02,460
that are you know dynamic or something

273
00:11:02,460 --> 00:11:03,720
that can sometimes increase

274
00:11:03,720 --> 00:11:05,220
in you because you're giving people a

275
00:11:05,220 --> 00:11:07,560
lot of flexibility around you know what

276
00:11:07,560 --> 00:11:09,689
can go inside there your ad slots but it

277
00:11:09,689 --> 00:11:10,920
can also be something that can

278
00:11:10,920 --> 00:11:13,199
potentially negatively impact the user

279
00:11:13,199 --> 00:11:15,540
experience by pushing things down so

280
00:11:15,540 --> 00:11:17,009
that's something that you want to avoid

281
00:11:17,009 --> 00:11:19,379
so how do we approach this well one

282
00:11:19,379 --> 00:11:22,319
solution to the problem is statically

283
00:11:22,319 --> 00:11:25,620
reserving space for the slot so you can

284
00:11:25,620 --> 00:11:27,540
make sure that you're defining a

285
00:11:27,540 --> 00:11:30,240
container for these ads or embed frames

286
00:11:30,240 --> 00:11:33,149
so that regardless of what goes inside

287
00:11:33,149 --> 00:11:36,449
you're not shifting the content of the

288
00:11:36,449 --> 00:11:39,149
page around so here I've got a container

289
00:11:39,149 --> 00:11:41,459
where I set my width and my height I've

290
00:11:41,459 --> 00:11:43,769
set a background color but I've also set

291
00:11:43,769 --> 00:11:45,389
it to overflow:hidden just in case

292
00:11:45,389 --> 00:11:47,759
anything dynamic is a little bit you

293
00:11:47,759 --> 00:11:50,819
know a little bit taller than the

294
00:11:50,819 --> 00:11:52,860
container I don't I still don't want it

295
00:11:52,860 --> 00:11:54,000
to be able to break out of it

296
00:11:54,000 --> 00:11:56,279
ideally the content fits inside of our

297
00:11:56,279 --> 00:11:58,290
container like our iframes or whatever

298
00:11:58,290 --> 00:12:00,540
else we might inject in there and what

299
00:12:00,540 --> 00:12:02,279
you can do if you're in the you know if

300
00:12:02,279 --> 00:12:04,889
you're somebody that has lots of dynamic

301
00:12:04,889 --> 00:12:06,509
content that gets injected into your

302
00:12:06,509 --> 00:12:09,269
page you can take a look at your your

303
00:12:09,269 --> 00:12:12,870
data look at what are the medians or the

304
00:12:12,870 --> 00:12:15,480
95th percentile widths and Heights for

305
00:12:15,480 --> 00:12:17,490
this dynamic content and size your

306
00:12:17,490 --> 00:12:19,949
container accordingly that'll just mean

307
00:12:19,949 --> 00:12:21,809
that you have the best chance at still

308
00:12:21,809 --> 00:12:23,579
being able to present that content users

309
00:12:23,579 --> 00:12:25,980
without negatively impacting the rest of

310
00:12:25,980 --> 00:12:27,930
the user experience so here's what it

311
00:12:27,930 --> 00:12:29,699
looks with with my pattern in place a

312
00:12:29,699 --> 00:12:32,670
reserved enough space and that content

313
00:12:32,670 --> 00:12:35,100
pops in but there are no layout shifts

314
00:12:35,100 --> 00:12:36,899
in the page so I'm really happy about

315
00:12:36,899 --> 00:12:39,870
that slightly better is my baseline for

316
00:12:39,870 --> 00:12:42,660
everything in life at the moment so yeah

317
00:12:42,660 --> 00:12:44,879
this is the lighthouse 6 dotto impact we

318
00:12:44,879 --> 00:12:46,680
can see that we reduced our layout

319
00:12:46,680 --> 00:12:48,629
shifts from zero point two four all the

320
00:12:48,629 --> 00:12:51,750
way down to about zero I'm gonna give

321
00:12:51,750 --> 00:12:54,089
myself about zero it's in the green so

322
00:12:54,089 --> 00:12:56,899
that's great so let's talk about a

323
00:12:56,899 --> 00:12:59,220
production example of something like

324
00:12:59,220 --> 00:13:02,879
this on Chloe so Chloe had a promotion

325
00:13:02,879 --> 00:13:05,639
banner for shipping at the top of their

326
00:13:05,639 --> 00:13:08,490
product listings page and you'll see

327
00:13:08,490 --> 00:13:09,689
this like free standard shipping

328
00:13:09,689 --> 00:13:12,360
promotion listed the very top but this

329
00:13:12,360 --> 00:13:15,240
wasn't always there there was a time

330
00:13:15,240 --> 00:13:17,430
when this product listings page

331
00:13:17,430 --> 00:13:21,450
a CLS of 0.4 which is like really not

332
00:13:21,450 --> 00:13:23,580
great because of two things the first

333
00:13:23,580 --> 00:13:25,740
was the way they approached their

334
00:13:25,740 --> 00:13:28,620
dynamic promo banner and the way that

335
00:13:28,620 --> 00:13:31,290
they approached filters let's talk about

336
00:13:31,290 --> 00:13:35,130
the banner first now this banner used to

337
00:13:35,130 --> 00:13:38,220
be positioned in line underneath the

338
00:13:38,220 --> 00:13:41,580
main page header and as you can see here

339
00:13:41,580 --> 00:13:43,800
it looks it looks kind of harmless but

340
00:13:43,800 --> 00:13:45,390
what's the impact of having a

341
00:13:45,390 --> 00:13:47,940
dynamically sized banner on the user

342
00:13:47,940 --> 00:13:49,470
experience well we have a video here

343
00:13:49,470 --> 00:13:52,080
let's take a look as we can see here

344
00:13:52,080 --> 00:13:55,980
once the content is fetched and rendered

345
00:13:55,980 --> 00:13:58,470
for this banner it pushes the content

346
00:13:58,470 --> 00:14:00,060
for the rest of the page all the way

347
00:14:00,060 --> 00:14:03,270
down and that's not very ideal so how

348
00:14:03,270 --> 00:14:05,790
did Chloe go about fixing this well they

349
00:14:05,790 --> 00:14:08,339
reserved space for this banner the

350
00:14:08,339 --> 00:14:11,010
content for this banner was also coming

351
00:14:11,010 --> 00:14:13,110
from a client-side request

352
00:14:13,110 --> 00:14:16,140
therefore messages were causing a pretty

353
00:14:16,140 --> 00:14:18,480
visual layout shift occurring a few

354
00:14:18,480 --> 00:14:21,120
seconds into page load now they moved

355
00:14:21,120 --> 00:14:23,640
this API call Street to the server and

356
00:14:23,640 --> 00:14:25,860
they made sure to reserve enough space

357
00:14:25,860 --> 00:14:27,750
for the banner with a simple height

358
00:14:27,750 --> 00:14:30,060
setting as a part of this work they

359
00:14:30,060 --> 00:14:31,500
moved the position of the banner up a

360
00:14:31,500 --> 00:14:34,350
little bit but altogether like moving

361
00:14:34,350 --> 00:14:36,120
more work to the server always a good

362
00:14:36,120 --> 00:14:38,970
idea and just making sure that they're

363
00:14:38,970 --> 00:14:40,589
reserving space these things made a bit

364
00:14:40,589 --> 00:14:42,600
of a difference so here's here's the

365
00:14:42,600 --> 00:14:46,080
after view here we can see the impact to

366
00:14:46,080 --> 00:14:48,180
their product listings pages after these

367
00:14:48,180 --> 00:14:49,620
pages after the changes have been made

368
00:14:49,620 --> 00:14:53,100
it's uh it's a lot less shifty some I'm

369
00:14:53,100 --> 00:14:53,910
happy about that

370
00:14:53,910 --> 00:14:56,520
so we talked about their promo banner

371
00:14:56,520 --> 00:15:00,420
the other big CLS issue for product

372
00:15:00,420 --> 00:15:02,459
listing pages was that Chloe had a

373
00:15:02,459 --> 00:15:04,890
filters widget for filtering products

374
00:15:04,890 --> 00:15:08,430
now this would rehydrate to become

375
00:15:08,430 --> 00:15:11,250
dynamic once it booted up and so on the

376
00:15:11,250 --> 00:15:15,209
client it was pending xha our calls for

377
00:15:15,209 --> 00:15:17,850
data was waiting on session state based

378
00:15:17,850 --> 00:15:20,220
on filter choices in order to be able to

379
00:15:20,220 --> 00:15:22,260
like finally render this thing on the

380
00:15:22,260 --> 00:15:25,290
screen so this is what this basically

381
00:15:25,290 --> 00:15:28,950
looked like we wait for kind of contest

382
00:15:28,950 --> 00:15:30,390
to be sent down for the filter widget we

383
00:15:30,390 --> 00:15:31,080
wait for Hydra

384
00:15:31,080 --> 00:15:32,940
it would still push content on the

385
00:15:32,940 --> 00:15:34,860
screen all the way down now what they

386
00:15:34,860 --> 00:15:36,630
ended up doing here was that they

387
00:15:36,630 --> 00:15:39,000
adapted this widget to contain more of

388
00:15:39,000 --> 00:15:41,040
the information needed to render the

389
00:15:41,040 --> 00:15:42,660
filter widget server-side

390
00:15:42,660 --> 00:15:44,880
they'd rendered it with better defaults

391
00:15:44,880 --> 00:15:47,160
this helped avoid those layout shifts

392
00:15:47,160 --> 00:15:49,190
and I just wanted to give a call out

393
00:15:49,190 --> 00:15:52,350
here to the right of the screen we can

394
00:15:52,350 --> 00:15:55,620
see the web vitals Chrome extension this

395
00:15:55,620 --> 00:15:57,630
gives you a real-time view of all of

396
00:15:57,630 --> 00:15:59,730
your vitals metrics and can just be

397
00:15:59,730 --> 00:16:01,800
helpful as you were building your site's

398
00:16:01,800 --> 00:16:04,500
locally or you're just browsing the web

399
00:16:04,500 --> 00:16:05,700
and want to get a sense for the

400
00:16:05,700 --> 00:16:07,230
performance of different sites that you

401
00:16:07,230 --> 00:16:10,110
you check out on the regular and here's

402
00:16:10,110 --> 00:16:12,750
what things look like after their

403
00:16:12,750 --> 00:16:16,500
rehydration fix for filters as you can

404
00:16:16,500 --> 00:16:19,320
see CLS reduced by a decent amount

405
00:16:19,320 --> 00:16:22,290
looking at the before and after and it

406
00:16:22,290 --> 00:16:23,910
was just another case of like pay

407
00:16:23,910 --> 00:16:25,350
attention to the little things in your

408
00:16:25,350 --> 00:16:27,690
pages that might be in aggregate causing

409
00:16:27,690 --> 00:16:29,970
lots of things to be pushed down every

410
00:16:29,970 --> 00:16:33,900
little CLS fix helps and here's the

411
00:16:33,900 --> 00:16:36,060
overall impact of these changes on

412
00:16:36,060 --> 00:16:38,220
desktop we can see that the above the

413
00:16:38,220 --> 00:16:40,800
full content is relatively stable and

414
00:16:40,800 --> 00:16:43,500
offers a much better user experience on

415
00:16:43,500 --> 00:16:46,080
the whole and this is also reflected in

416
00:16:46,080 --> 00:16:48,630
lighthouse work on my house got to give

417
00:16:48,630 --> 00:16:50,670
got a give lighthouse shut up as we can

418
00:16:50,670 --> 00:16:52,290
see here cumulative layout shift is in

419
00:16:52,290 --> 00:16:54,240
the green we've hit zero so it's in a

420
00:16:54,240 --> 00:16:57,270
really solid place so to improve CLS

421
00:16:57,270 --> 00:16:59,760
Chloe acted on a number of different

422
00:16:59,760 --> 00:17:02,370
elements it wasn't just one thing they

423
00:17:02,370 --> 00:17:04,650
reserved space for the promo content in

424
00:17:04,650 --> 00:17:06,900
terms of its ratio they made sure to set

425
00:17:06,900 --> 00:17:08,550
width and height dimensions on their

426
00:17:08,550 --> 00:17:11,160
images and they adopted a skeleton

427
00:17:11,160 --> 00:17:12,900
pattern with improved perceived

428
00:17:12,900 --> 00:17:16,020
performance they reserved space for

429
00:17:16,020 --> 00:17:18,060
their promo banners requests before

430
00:17:18,060 --> 00:17:19,830
receiving messages and they also

431
00:17:19,830 --> 00:17:21,750
reserved space for the filters dynamic

432
00:17:21,750 --> 00:17:23,670
component as well as making a few other

433
00:17:23,670 --> 00:17:25,610
optimizations to just help with

434
00:17:25,610 --> 00:17:28,980
rendering so on the whole it was it was

435
00:17:28,980 --> 00:17:32,820
definitely worth it alright so I have a

436
00:17:32,820 --> 00:17:34,110
big surprise for you

437
00:17:34,110 --> 00:17:39,000
we've got more metrics to talk about put

438
00:17:39,000 --> 00:17:40,670
a lot of work into this light

439
00:17:40,670 --> 00:17:43,050
historically it's been a bit of a

440
00:17:43,050 --> 00:17:44,220
challenge for web

441
00:17:44,220 --> 00:17:46,110
developers to measure just how quickly

442
00:17:46,110 --> 00:17:48,450
the main content of the webpage loads

443
00:17:48,450 --> 00:17:51,360
and is visible to users thankfully we

444
00:17:51,360 --> 00:17:53,159
now have metrics like largest content

445
00:17:53,159 --> 00:17:55,350
full paint that are able to report the

446
00:17:55,350 --> 00:17:57,480
render time of the largest content

447
00:17:57,480 --> 00:17:59,490
element that's visible within the

448
00:17:59,490 --> 00:18:01,950
viewport now you might be wondering what

449
00:18:01,950 --> 00:18:04,110
causes a poor LCP well there are there

450
00:18:04,110 --> 00:18:06,030
are lots of things slow server response

451
00:18:06,030 --> 00:18:08,520
times or a big one this could be your

452
00:18:08,520 --> 00:18:10,860
back-end infrastructure it could be

453
00:18:10,860 --> 00:18:14,100
unoptimized database queries API

454
00:18:14,100 --> 00:18:16,020
responses that are just taking a while

455
00:18:16,020 --> 00:18:18,419
to resolve it could be render blocking

456
00:18:18,419 --> 00:18:21,270
JavaScript and CSS slow resource times

457
00:18:21,270 --> 00:18:24,419
are another big one you could have an

458
00:18:24,419 --> 00:18:27,120
optimized images slowing down your LCP

459
00:18:27,120 --> 00:18:29,150
and then there's client-side rendering

460
00:18:29,150 --> 00:18:32,419
there's a whole class of problems where

461
00:18:32,419 --> 00:18:34,620
those of us who love working in

462
00:18:34,620 --> 00:18:36,659
JavaScript and using modern libraries

463
00:18:36,659 --> 00:18:38,760
and frameworks and bumblers can

464
00:18:38,760 --> 00:18:42,390
sometimes get into a place where we have

465
00:18:42,390 --> 00:18:45,600
our requests for assets like images in

466
00:18:45,600 --> 00:18:49,020
particular hero images behind JavaScript

467
00:18:49,020 --> 00:18:51,059
fetches so the browser first of all has

468
00:18:51,059 --> 00:18:53,400
to fetch your JavaScript then it has to

469
00:18:53,400 --> 00:18:55,559
parse and process that JavaScript to

470
00:18:55,559 --> 00:18:58,260
fetch your image and that whole process

471
00:18:58,260 --> 00:19:00,929
can take so long that you delay showing

472
00:19:00,929 --> 00:19:03,539
meaningful content to your user so it's

473
00:19:03,539 --> 00:19:04,740
just things like that you should keep an

474
00:19:04,740 --> 00:19:06,929
eye on there are plenty of tools that

475
00:19:06,929 --> 00:19:09,150
can help diagnose these issues so let's

476
00:19:09,150 --> 00:19:10,770
take a look at a at some real-world

477
00:19:10,770 --> 00:19:13,890
production challenges around LCP and how

478
00:19:13,890 --> 00:19:15,299
to work around them

479
00:19:15,299 --> 00:19:17,909
Chloe started off with an L CP of about

480
00:19:17,909 --> 00:19:20,520
10 or 11 seconds in this view here we

481
00:19:20,520 --> 00:19:22,950
can see that their primary hero image

482
00:19:22,950 --> 00:19:25,110
content wasn't wasn't getting fetched

483
00:19:25,110 --> 00:19:27,090
and rendered until about 11 seconds in

484
00:19:27,090 --> 00:19:29,429
to our trace their home page suffers

485
00:19:29,429 --> 00:19:31,980
from in this case it suffered from a few

486
00:19:31,980 --> 00:19:33,750
different things it had heavy

487
00:19:33,750 --> 00:19:36,720
full-screen image downloads poorly

488
00:19:36,720 --> 00:19:39,270
optimized images some images that were

489
00:19:39,270 --> 00:19:41,640
requested late in the network chain and

490
00:19:41,640 --> 00:19:43,919
these are very common issues there's

491
00:19:43,919 --> 00:19:45,990
nothing here that's just like that

492
00:19:45,990 --> 00:19:47,400
they're doing crazy wrong it's just very

493
00:19:47,400 --> 00:19:49,559
common issues and it's useful to be

494
00:19:49,559 --> 00:19:51,860
aware of some of the things that impacts

495
00:19:51,860 --> 00:19:55,799
LCP so things that impact LCP are image

496
00:19:55,799 --> 00:19:58,140
elements image elements the

497
00:19:58,140 --> 00:20:00,630
be inside of an SVG element video

498
00:20:00,630 --> 00:20:02,730
elements block level elements containing

499
00:20:02,730 --> 00:20:05,910
text nodes and so let's let's talk about

500
00:20:05,910 --> 00:20:07,830
images first because they're there

501
00:20:07,830 --> 00:20:10,440
they're pretty often a cause for poor

502
00:20:10,440 --> 00:20:14,340
LCP so for many sites images are the

503
00:20:14,340 --> 00:20:17,220
largest element in view when the page is

504
00:20:17,220 --> 00:20:20,790
finished loading especially as UX

505
00:20:20,790 --> 00:20:23,430
patterns have shifted towards us using

506
00:20:23,430 --> 00:20:25,950
more hero images in our pages so it's

507
00:20:25,950 --> 00:20:29,070
very very important to optimize our

508
00:20:29,070 --> 00:20:30,600
images especially anything that's

509
00:20:30,600 --> 00:20:33,300
visible within the initial viewport now

510
00:20:33,300 --> 00:20:34,920
there are a few techniques that you can

511
00:20:34,920 --> 00:20:38,580
use here you can consider not having you

512
00:20:38,580 --> 00:20:40,950
know an image in the first place if it's

513
00:20:40,950 --> 00:20:42,270
if it's not that relevant maybe you

514
00:20:42,270 --> 00:20:46,260
remove it compress those images use you

515
00:20:46,260 --> 00:20:47,940
know love letters are plenty of image

516
00:20:47,940 --> 00:20:49,500
optimization tools out there compress

517
00:20:49,500 --> 00:20:51,090
your images maybe consider converting

518
00:20:51,090 --> 00:20:53,070
them to more efficient modern formats

519
00:20:53,070 --> 00:20:55,890
use responsive images and you can also

520
00:20:55,890 --> 00:20:59,070
consider using an image CDN I'm seeing

521
00:20:59,070 --> 00:21:01,770
an increasing number of sites leveraging

522
00:21:01,770 --> 00:21:05,610
image CDNs just to help them get control

523
00:21:05,610 --> 00:21:09,390
over a ability to just tweak parameters

524
00:21:09,390 --> 00:21:12,270
in a URL for an image and change what

525
00:21:12,270 --> 00:21:14,700
format gets served down or what quality

526
00:21:14,700 --> 00:21:17,760
you have and it's just using an image

527
00:21:17,760 --> 00:21:19,590
CDN can be a really good way of staying

528
00:21:19,590 --> 00:21:22,400
on top of modern best practices because

529
00:21:22,400 --> 00:21:25,400
even even us like that are you know web

530
00:21:25,400 --> 00:21:27,570
pursues iasts sometimes I have a hard

531
00:21:27,570 --> 00:21:29,430
time staying on top of all everything

532
00:21:29,430 --> 00:21:30,630
happening in the image optimization

533
00:21:30,630 --> 00:21:33,450
world now you might be wondering how can

534
00:21:33,450 --> 00:21:36,870
I identify the element that is my like

535
00:21:36,870 --> 00:21:40,740
LCP thankfully we've got some solutions

536
00:21:40,740 --> 00:21:43,320
here in dev tools in the performance

537
00:21:43,320 --> 00:21:46,350
panel if you record a trace and you go

538
00:21:46,350 --> 00:21:48,960
to timings you should find a record for

539
00:21:48,960 --> 00:21:52,470
LCP click on that record and you'll get

540
00:21:52,470 --> 00:21:54,450
the summary pane showing up that

541
00:21:54,450 --> 00:21:55,980
includes things like the size of the

542
00:21:55,980 --> 00:21:58,410
image and more importantly the related

543
00:21:58,410 --> 00:22:00,600
note so if you hover over that related

544
00:22:00,600 --> 00:22:02,580
node it will highlight what in your page

545
00:22:02,580 --> 00:22:04,950
was considered LCP I personally find

546
00:22:04,950 --> 00:22:07,680
this really valuable as kind of a

547
00:22:07,680 --> 00:22:09,520
stepping stone to where

548
00:22:09,520 --> 00:22:11,620
I'd be spending my time optimizing so

549
00:22:11,620 --> 00:22:13,570
check that out if you use the

550
00:22:13,570 --> 00:22:15,280
performance panel this is also something

551
00:22:15,280 --> 00:22:17,380
that we try to capture in lighthouse so

552
00:22:17,380 --> 00:22:19,870
lighthouse has got a largest content

553
00:22:19,870 --> 00:22:23,050
full paint element audit and we try to

554
00:22:23,050 --> 00:22:25,150
highlight what element was responsible

555
00:22:25,150 --> 00:22:27,940
here too so if you use lighthouse check

556
00:22:27,940 --> 00:22:29,860
that out so back to Chloe

557
00:22:29,860 --> 00:22:31,660
so Chloe discovered that they were

558
00:22:31,660 --> 00:22:34,810
delivering very high resolution images

559
00:22:34,810 --> 00:22:37,120
even to even very high resolution for

560
00:22:37,120 --> 00:22:39,610
retina screens because there is a bit of

561
00:22:39,610 --> 00:22:42,370
a cutoff point where if you're serving

562
00:22:42,370 --> 00:22:46,870
kind of two by three by images the human

563
00:22:46,870 --> 00:22:48,960
eye is is not going to be able to

564
00:22:48,960 --> 00:22:51,910
perceive large amounts of difference

565
00:22:51,910 --> 00:22:54,550
there and there are kind of you know you

566
00:22:54,550 --> 00:22:56,770
have diminishing values that you get out

567
00:22:56,770 --> 00:22:58,390
of just serving very very very high

568
00:22:58,390 --> 00:23:00,910
resolution images now in this case we're

569
00:23:00,910 --> 00:23:02,470
in Ren dev tools were in the elements

570
00:23:02,470 --> 00:23:04,330
panel we're looking at a specific image

571
00:23:04,330 --> 00:23:07,360
and what we see is that the maximum

572
00:23:07,360 --> 00:23:10,740
width of image is being served down is

573
00:23:10,740 --> 00:23:13,870
1920 pixels it's pretty it's pretty

574
00:23:13,870 --> 00:23:16,600
large so one of the things that Co we

575
00:23:16,600 --> 00:23:18,400
actually decided to do was change things

576
00:23:18,400 --> 00:23:21,040
up here they resized their images to not

577
00:23:21,040 --> 00:23:23,170
be more than two times the image

578
00:23:23,170 --> 00:23:26,320
viewport size so they removed source of

579
00:23:26,320 --> 00:23:31,000
sizes over 828 width to keep an image

580
00:23:31,000 --> 00:23:32,680
maximum size that they were comfortable

581
00:23:32,680 --> 00:23:34,570
with and that actually ended up being

582
00:23:34,570 --> 00:23:37,330
pretty fine on retina devices as well so

583
00:23:37,330 --> 00:23:39,430
is this nice trade-off of how do we

584
00:23:39,430 --> 00:23:42,490
deliver rich imagery without negatively

585
00:23:42,490 --> 00:23:45,670
impacting the user experience now by

586
00:23:45,670 --> 00:23:49,600
doing this work on an iPhone X or a

587
00:23:49,600 --> 00:23:53,080
pixel to excel that was previously

588
00:23:53,080 --> 00:23:56,140
seeing any were up to 245 kilobytes

589
00:23:56,140 --> 00:23:57,790
worth an image bytes being downloaded

590
00:23:57,790 --> 00:24:00,660
they were able to reduce it down to 125

591
00:24:00,660 --> 00:24:04,480
that's that's huge that's like a 51

592
00:24:04,480 --> 00:24:07,030
percent decrease in image bytes being

593
00:24:07,030 --> 00:24:08,680
served down with no noticeable

594
00:24:08,680 --> 00:24:11,500
difference so optimize your images

595
00:24:11,500 --> 00:24:13,120
people the next thing we're going to

596
00:24:13,120 --> 00:24:15,520
talk about is some of the other image

597
00:24:15,520 --> 00:24:18,670
optimizations that they performed so on

598
00:24:18,670 --> 00:24:20,470
the product listings page Chloe

599
00:24:20,470 --> 00:24:22,850
use image lazy loading which

600
00:24:22,850 --> 00:24:24,559
you know it's a relatively popular

601
00:24:24,559 --> 00:24:26,360
pattern what they discovered was that

602
00:24:26,360 --> 00:24:29,059
there were four primary images being

603
00:24:29,059 --> 00:24:32,120
loaded above the fold however there was

604
00:24:32,120 --> 00:24:34,460
one off-screen image that seemed to be

605
00:24:34,460 --> 00:24:36,140
tripping up their lazy loading

606
00:24:36,140 --> 00:24:38,270
heuristics and was still being fetched

607
00:24:38,270 --> 00:24:41,200
now this particular image happened to be

608
00:24:41,200 --> 00:24:44,510
248 kilobytes in size about 200 plus

609
00:24:44,510 --> 00:24:47,870
kilobytes in size and this was this was

610
00:24:47,870 --> 00:24:49,670
negatively impacting the user experience

611
00:24:49,670 --> 00:24:53,000
so they wanted to try improving this now

612
00:24:53,000 --> 00:24:54,590
on the whole there were a number of

613
00:24:54,590 --> 00:24:58,160
things Chloe did they were able to bring

614
00:24:58,160 --> 00:25:00,860
down their above-the-fold image download

615
00:25:00,860 --> 00:25:03,020
size all the way to 14 and a half

616
00:25:03,020 --> 00:25:05,660
kilobytes they were able able to tune

617
00:25:05,660 --> 00:25:08,150
their lazy loading heuristics so that

618
00:25:08,150 --> 00:25:09,950
off-screen images like the one I was

619
00:25:09,950 --> 00:25:11,630
just talking about were no longer a

620
00:25:11,630 --> 00:25:12,169
problem

621
00:25:12,169 --> 00:25:15,440
they adopted an image CDN they adopted

622
00:25:15,440 --> 00:25:19,100
wet pee by defaults improved their image

623
00:25:19,100 --> 00:25:22,309
resizing strategy and the results of

624
00:25:22,309 --> 00:25:24,410
this outside of just having a nice like

625
00:25:24,410 --> 00:25:27,049
lighthouse report with lots of greens is

626
00:25:27,049 --> 00:25:30,590
that each product page now weighs 57%

627
00:25:30,590 --> 00:25:32,690
less than it did before which is a

628
00:25:32,690 --> 00:25:34,790
really nice outcome to have as a result

629
00:25:34,790 --> 00:25:37,340
of like optimizing your images taking a

630
00:25:37,340 --> 00:25:40,820
step back here's what the homepage LCP

631
00:25:40,820 --> 00:25:43,309
look like after these changes we can see

632
00:25:43,309 --> 00:25:46,460
that again previously those hero images

633
00:25:46,460 --> 00:25:48,919
were not rendering in a total about 11

634
00:25:48,919 --> 00:25:52,309
seconds in now LCP happens at about 4

635
00:25:52,309 --> 00:25:54,440
seconds into the process and it's

636
00:25:54,440 --> 00:25:56,809
complete just a few seconds later the

637
00:25:56,809 --> 00:25:59,240
request time for our LCP related note

638
00:25:59,240 --> 00:26:02,330
for kind of our hero images is about 1.3

639
00:26:02,330 --> 00:26:04,790
seconds in so on the whole this is this

640
00:26:04,790 --> 00:26:06,590
is really great there's still work they

641
00:26:06,590 --> 00:26:07,730
could do here but on the whole this is

642
00:26:07,730 --> 00:26:10,070
like fantastic to see so let's switch

643
00:26:10,070 --> 00:26:14,140
things up to our next tip defer any

644
00:26:14,140 --> 00:26:17,480
non-critical JavaScript and CSS to speed

645
00:26:17,480 --> 00:26:20,030
up loading the main content of your page

646
00:26:20,030 --> 00:26:22,190
now this is guidance that is it's not

647
00:26:22,190 --> 00:26:24,590
new it's been around for a few years but

648
00:26:24,590 --> 00:26:26,150
for anyone that's not familiar with this

649
00:26:26,150 --> 00:26:27,860
guidance I'll give you a very quick

650
00:26:27,860 --> 00:26:31,190
recap of it now before a browser can

651
00:26:31,190 --> 00:26:33,559
render any content it needs to parse

652
00:26:33,559 --> 00:26:36,260
HTML markup into a Dom tree the

653
00:26:36,260 --> 00:26:38,660
Arthur needs to pause if it encounters

654
00:26:38,660 --> 00:26:41,030
any external stylesheets your

655
00:26:41,030 --> 00:26:44,150
synchronous script and scripts and

656
00:26:44,150 --> 00:26:46,730
stylesheets can both you know render

657
00:26:46,730 --> 00:26:49,400
bbbb render blocking resources which can

658
00:26:49,400 --> 00:26:52,150
delay your first content full paint

659
00:26:52,150 --> 00:26:54,590
consequently your largest content will

660
00:26:54,590 --> 00:26:56,510
paint as well and so what we tell people

661
00:26:56,510 --> 00:26:58,730
to do is defer any of your non-critical

662
00:26:58,730 --> 00:27:01,490
scripts and stylesheets the speed upload

663
00:27:01,490 --> 00:27:03,920
so let's take a look once again at the

664
00:27:03,920 --> 00:27:06,530
product listings page for Chloe as we

665
00:27:06,530 --> 00:27:08,300
can see this is a trace independent of

666
00:27:08,300 --> 00:27:10,280
their image optimizations and as we can

667
00:27:10,280 --> 00:27:12,920
see here light house highlights that

668
00:27:12,920 --> 00:27:15,170
there are a few render blocking style

669
00:27:15,170 --> 00:27:17,810
sheets that are delaying early paints on

670
00:27:17,810 --> 00:27:20,450
the product listings page now this is

671
00:27:20,450 --> 00:27:22,280
this is kind of manifested in terms of

672
00:27:22,280 --> 00:27:24,230
like just how much white we're seeing in

673
00:27:24,230 --> 00:27:25,910
our film strip so one approach to

674
00:27:25,910 --> 00:27:28,520
addressing this problem is by inlining

675
00:27:28,520 --> 00:27:31,370
your critical CSS and deferring the load

676
00:27:31,370 --> 00:27:33,710
of non-critical styles we often call

677
00:27:33,710 --> 00:27:36,710
this technique critical CSS so critical

678
00:27:36,710 --> 00:27:40,400
CSS is all about extracting CSS for

679
00:27:40,400 --> 00:27:41,960
above-the-fold content

680
00:27:41,960 --> 00:27:44,810
ideally across a number of different

681
00:27:44,810 --> 00:27:48,320
breakpoints and making sure that you can

682
00:27:48,320 --> 00:27:50,930
render the above-the-fold content as

683
00:27:50,930 --> 00:27:53,150
quickly as possible in the first few our

684
00:27:53,150 --> 00:27:53,810
TTS

685
00:27:53,810 --> 00:27:56,240
and deferring the load of the rest of

686
00:27:56,240 --> 00:27:57,980
your style sheets for the page you know

687
00:27:57,980 --> 00:28:00,260
for things below the fold as soon as

688
00:28:00,260 --> 00:28:03,080
possible otherwise so how did Chloe do

689
00:28:03,080 --> 00:28:06,440
this well they built some tooling they

690
00:28:06,440 --> 00:28:08,660
implemented critical CSS in their sass

691
00:28:08,660 --> 00:28:11,360
build process and they constructed a

692
00:28:11,360 --> 00:28:13,810
syntax allowing their developers to

693
00:28:13,810 --> 00:28:17,330
specify for each widget what part of the

694
00:28:17,330 --> 00:28:19,450
CSS code goes into their critical CSS

695
00:28:19,450 --> 00:28:22,220
this is highlighted using the critical

696
00:28:22,220 --> 00:28:24,110
keywords you see on the screen right now

697
00:28:24,110 --> 00:28:27,020
now at Build time they're able to build

698
00:28:27,020 --> 00:28:29,480
both the critical CSS and the

699
00:28:29,480 --> 00:28:31,700
non-critical CSS so that every single

700
00:28:31,700 --> 00:28:34,760
build is consistent with both there are

701
00:28:34,760 --> 00:28:36,500
many ways that you can approach critical

702
00:28:36,500 --> 00:28:39,530
CSS I've contributed to some tooling on

703
00:28:39,530 --> 00:28:43,400
this topic in the past and you can you

704
00:28:43,400 --> 00:28:45,650
can automate it you can go very custom I

705
00:28:45,650 --> 00:28:47,360
see some teams that will just have a

706
00:28:47,360 --> 00:28:49,549
critical dot CSS file

707
00:28:49,549 --> 00:28:52,669
that they manually curate and regardless

708
00:28:52,669 --> 00:28:54,679
of the the approach that you take what's

709
00:28:54,679 --> 00:28:56,419
key is just making sure that you're

710
00:28:56,419 --> 00:28:59,239
delivering important content to the user

711
00:28:59,239 --> 00:29:01,369
as quickly as possible so we talked

712
00:29:01,369 --> 00:29:03,679
about the need for you know loading in

713
00:29:03,679 --> 00:29:06,080
the other style sheets for the page will

714
00:29:06,080 --> 00:29:08,809
quit what Chloe do is their non-critical

715
00:29:08,809 --> 00:29:11,419
CSS style sheets are stored in an array

716
00:29:11,419 --> 00:29:13,610
so they point to references to them on

717
00:29:13,610 --> 00:29:16,129
their servers and that's injected with a

718
00:29:16,129 --> 00:29:19,009
deferred script so that it's hopefully

719
00:29:19,009 --> 00:29:20,929
not render blocking but it's still

720
00:29:20,929 --> 00:29:23,450
loaded with a relatively high priority

721
00:29:23,450 --> 00:29:25,580
that isn't going to interfere with the

722
00:29:25,580 --> 00:29:28,779
HTML parser so what was the impact of

723
00:29:28,779 --> 00:29:31,789
optimizing their critical CSS Leanne the

724
00:29:31,789 --> 00:29:33,739
answer is pretty large they were able to

725
00:29:33,739 --> 00:29:36,139
bring down their first content full

726
00:29:36,139 --> 00:29:39,399
paint from 2.1 seconds to about 1.1 and

727
00:29:39,399 --> 00:29:44,320
their LCP from 2.9 seconds to about 1.5

728
00:29:44,320 --> 00:29:47,080
now this is this is really great work

729
00:29:47,080 --> 00:29:49,609
optimizing your critical CSS can be a

730
00:29:49,609 --> 00:29:51,379
bit of a time investment but is

731
00:29:51,379 --> 00:29:52,999
something that can just make sure that

732
00:29:52,999 --> 00:29:55,159
your page is getting styled as soon as

733
00:29:55,159 --> 00:29:57,980
possible so let's talk about another tip

734
00:29:57,980 --> 00:30:01,159
I mentioned slow server response times

735
00:30:01,159 --> 00:30:02,629
when we were discussing like what what

736
00:30:02,629 --> 00:30:06,350
impacts LCP now the longer that it takes

737
00:30:06,350 --> 00:30:09,109
a browser to receive content from the

738
00:30:09,109 --> 00:30:11,239
server the longer that it takes to

739
00:30:11,239 --> 00:30:13,509
render anything on the screen

740
00:30:13,509 --> 00:30:17,720
the faster server it can respond that

741
00:30:17,720 --> 00:30:19,100
that's going to improve every single

742
00:30:19,100 --> 00:30:22,460
page load metric including LCP so you

743
00:30:22,460 --> 00:30:23,899
might be wondering how can I tell if I

744
00:30:23,899 --> 00:30:25,100
have a slow server response time

745
00:30:25,100 --> 00:30:27,289
lighthouse has you covered in lighthouse

746
00:30:27,289 --> 00:30:29,720
we have an audit called reduce initial

747
00:30:29,720 --> 00:30:32,509
server response time and if you if you

748
00:30:32,509 --> 00:30:35,359
see this it's a good hint to spend more

749
00:30:35,359 --> 00:30:38,210
time diagnosing the problem and causes

750
00:30:38,210 --> 00:30:40,460
of the problem as I mentioned earlier it

751
00:30:40,460 --> 00:30:42,399
can be plenty of things on your back-end

752
00:30:42,399 --> 00:30:45,649
and we're trying to optimize our server

753
00:30:45,649 --> 00:30:47,509
response times there's plenty that we

754
00:30:47,509 --> 00:30:51,669
can do in terms of optimizing you know

755
00:30:51,669 --> 00:30:56,179
our DNS our pre connects all of those

756
00:30:56,179 --> 00:30:57,409
types of things but there are also

757
00:30:57,409 --> 00:30:58,999
things that we can do to optimize

758
00:30:58,999 --> 00:31:01,999
loading priority this is where

759
00:31:01,999 --> 00:31:03,080
techniques like

760
00:31:03,080 --> 00:31:05,120
well preload and serverpush can come

761
00:31:05,120 --> 00:31:07,190
into play now if you're new to server

762
00:31:07,190 --> 00:31:09,440
push I'll give you a quick summary of it

763
00:31:09,440 --> 00:31:13,610
to improve latency hb2 introduced this

764
00:31:13,610 --> 00:31:16,669
idea server push which basically allows

765
00:31:16,669 --> 00:31:19,190
a server to push resources to the

766
00:31:19,190 --> 00:31:21,140
browser before they're explicitly

767
00:31:21,140 --> 00:31:24,740
requested now you and I as developers we

768
00:31:24,740 --> 00:31:26,840
can as well as anyone else watching

769
00:31:26,840 --> 00:31:29,659
you're all awesome too we often know

770
00:31:29,659 --> 00:31:32,450
what the most important resources are on

771
00:31:32,450 --> 00:31:35,120
a page and so we can start pushing those

772
00:31:35,120 --> 00:31:39,350
as soon as you know things respond with

773
00:31:39,350 --> 00:31:41,870
the initial requests this allows the

774
00:31:41,870 --> 00:31:44,389
server to fully utilize was otherwise an

775
00:31:44,389 --> 00:31:47,590
idle network to improve page load times

776
00:31:47,590 --> 00:31:50,899
now server push is is not without its

777
00:31:50,899 --> 00:31:54,649
it's nuanced this is one of those

778
00:31:54,649 --> 00:31:56,000
optimizations where you need to be

779
00:31:56,000 --> 00:32:00,919
careful it's possible to over push so

780
00:32:00,919 --> 00:32:05,059
server push is not HTTP cache aware so I

781
00:32:05,059 --> 00:32:06,740
could push something for a particular

782
00:32:06,740 --> 00:32:09,139
page the user could come back to another

783
00:32:09,139 --> 00:32:11,179
related page and the server would push

784
00:32:11,179 --> 00:32:14,210
those exact same resources again the way

785
00:32:14,210 --> 00:32:17,570
to avoid that is by either using cookies

786
00:32:17,570 --> 00:32:22,279
or a serviceworker to avoid those those

787
00:32:22,279 --> 00:32:24,110
refetch is for those types of resources

788
00:32:24,110 --> 00:32:26,480
and track what's in the cache but it

789
00:32:26,480 --> 00:32:28,250
does involve a little bit more work in

790
00:32:28,250 --> 00:32:30,320
general server pushes an optimization

791
00:32:30,320 --> 00:32:32,059
that can have a big impact but just just

792
00:32:32,059 --> 00:32:34,190
be aware of some of that nuance it's not

793
00:32:34,190 --> 00:32:36,110
quite as simple as just like turning it

794
00:32:36,110 --> 00:32:40,399
on sometimes now Chloe use automatic

795
00:32:40,399 --> 00:32:42,169
server push which is an implementation

796
00:32:42,169 --> 00:32:45,980
provided by Akamai it uses data to

797
00:32:45,980 --> 00:32:47,990
decide you know when to push critical

798
00:32:47,990 --> 00:32:51,049
CSS fonts and script and if you're

799
00:32:51,049 --> 00:32:54,289
manually using server push yourself you

800
00:32:54,289 --> 00:32:55,970
might end up looking at syntax that

801
00:32:55,970 --> 00:32:58,010
looks a little bit like this what we see

802
00:32:58,010 --> 00:33:02,059
here is the link HTTP header this is

803
00:33:02,059 --> 00:33:04,610
actually the preload resource hint in

804
00:33:04,610 --> 00:33:07,700
action and it's a separate but distinct

805
00:33:07,700 --> 00:33:10,720
optimization from server push but in

806
00:33:10,720 --> 00:33:14,450
reality most hb2 implementations will

807
00:33:14,450 --> 00:33:16,220
push an asset

808
00:33:16,220 --> 00:33:18,679
specified in a link header containing a

809
00:33:18,679 --> 00:33:20,929
preload resource hint so you can use the

810
00:33:20,929 --> 00:33:23,990
syntax in order to enable server pushes

811
00:33:23,990 --> 00:33:27,200
for for a page so what was the impact of

812
00:33:27,200 --> 00:33:29,480
this optimization without server push

813
00:33:29,480 --> 00:33:31,789
Chloe you're finding in their lab tests

814
00:33:31,789 --> 00:33:35,510
that LCP was closer to four seconds but

815
00:33:35,510 --> 00:33:38,690
with it it was closer to 2.5 seconds

816
00:33:38,690 --> 00:33:41,210
which is like a huge amount of impact on

817
00:33:41,210 --> 00:33:42,860
screen at the moment we've been

818
00:33:42,860 --> 00:33:45,020
verifying that using lighthouse but you

819
00:33:45,020 --> 00:33:48,559
can also tell if individual requests in

820
00:33:48,559 --> 00:33:50,870
you know we're server pushed using

821
00:33:50,870 --> 00:33:53,179
things like dev tools and using things

822
00:33:53,179 --> 00:33:55,700
like webpage tests Network waterfall

823
00:33:55,700 --> 00:33:58,909
view both are very very handy now we're

824
00:33:58,909 --> 00:34:02,809
on to our very last metric right Chloe

825
00:34:02,809 --> 00:34:04,940
didn't optimize her forced input delay

826
00:34:04,940 --> 00:34:07,340
but I did want to very quickly cover it

827
00:34:07,340 --> 00:34:10,159
now first input delay measures the time

828
00:34:10,159 --> 00:34:12,710
from when a user first interacts with a

829
00:34:12,710 --> 00:34:15,590
page so that moment when they start to

830
00:34:15,590 --> 00:34:19,609
click on a button or or tap some UI some

831
00:34:19,609 --> 00:34:22,159
JavaScript powered control so the time

832
00:34:22,159 --> 00:34:23,899
that the browser is actually able to

833
00:34:23,899 --> 00:34:26,990
respond to that interaction now there

834
00:34:26,990 --> 00:34:29,599
are many things that cause a poor first

835
00:34:29,599 --> 00:34:32,599
input delay there can be long tasks on

836
00:34:32,599 --> 00:34:35,540
the main thread heavy JavaScript

837
00:34:35,540 --> 00:34:38,720
execution large JavaScript bundles can

838
00:34:38,720 --> 00:34:42,080
delay how soon script can be processed

839
00:34:42,080 --> 00:34:44,119
by the browser and it can have an impact

840
00:34:44,119 --> 00:34:45,950
here and then you have things like

841
00:34:45,950 --> 00:34:48,800
render blocking script now in general I

842
00:34:48,800 --> 00:34:51,500
would strongly recommend using

843
00:34:51,500 --> 00:34:53,389
lighthouse and using dev tools because

844
00:34:53,389 --> 00:34:55,429
they do try to point out areas where you

845
00:34:55,429 --> 00:34:57,200
might have long tasks or heavy script

846
00:34:57,200 --> 00:34:59,690
execution very often the solution is to

847
00:34:59,690 --> 00:35:02,599
just break up this work serve what the

848
00:35:02,599 --> 00:35:05,720
user needs when they need it and try to

849
00:35:05,720 --> 00:35:08,109
look at opportunities for you know

850
00:35:08,109 --> 00:35:10,190
minimizing main thread work as much as

851
00:35:10,190 --> 00:35:12,520
possible sometimes people will

852
00:35:12,520 --> 00:35:15,170
contextualize this in terms of you know

853
00:35:15,170 --> 00:35:17,030
maybe shift some of that work some of

854
00:35:17,030 --> 00:35:20,240
the logic work to a web worker but

855
00:35:20,240 --> 00:35:22,099
regardless of the path you want to take

856
00:35:22,099 --> 00:35:25,640
there the the end goal is essentially

857
00:35:25,640 --> 00:35:27,440
just making sure that the main thread

858
00:35:27,440 --> 00:35:28,870
isn't busy and that you

859
00:35:28,870 --> 00:35:31,180
interactions are not delayed so we're

860
00:35:31,180 --> 00:35:33,760
almost at the end of our journey with

861
00:35:33,760 --> 00:35:36,850
Chloe here we can take a look at Chloe's

862
00:35:36,850 --> 00:35:39,520
overall web vitals in the lab thanks to

863
00:35:39,520 --> 00:35:41,680
their investments in performance and

864
00:35:41,680 --> 00:35:44,350
user experience they were able to reduce

865
00:35:44,350 --> 00:35:46,420
their cumulative layout shifts down to

866
00:35:46,420 --> 00:35:49,930
zero and their LCP by almost half this

867
00:35:49,930 --> 00:35:52,300
is like this is mind-blowing li awesome

868
00:35:52,300 --> 00:35:54,220
this is like really really cool as

869
00:35:54,220 --> 00:35:57,040
you've seen all of this work is kind of

870
00:35:57,040 --> 00:36:00,190
the culmination of a number of smaller

871
00:36:00,190 --> 00:36:02,620
optimizations that when added up

872
00:36:02,620 --> 00:36:04,660
actually make a pretty significant

873
00:36:04,660 --> 00:36:06,940
impact to your end user experience and

874
00:36:06,940 --> 00:36:08,770
we don't have to just look at data in

875
00:36:08,770 --> 00:36:10,360
the lab we can look at the field as well

876
00:36:10,360 --> 00:36:13,360
here is chrome user experience report

877
00:36:13,360 --> 00:36:16,570
data for Chloe and as we can see our

878
00:36:16,570 --> 00:36:19,510
core web vitals metrics for LCP and CLS

879
00:36:19,510 --> 00:36:22,450
are trending in the right direction

880
00:36:22,450 --> 00:36:26,590
CLS went from 0.85 down to zero in the

881
00:36:26,590 --> 00:36:29,110
latest data set and this is all like on

882
00:36:29,110 --> 00:36:30,550
the whole it's tremendous work it's

883
00:36:30,550 --> 00:36:32,350
really great to see and I know that

884
00:36:32,350 --> 00:36:35,350
Chloe are happy to continue building on

885
00:36:35,350 --> 00:36:38,080
this work in the future as well now if

886
00:36:38,080 --> 00:36:40,330
you're interested in building dashboards

887
00:36:40,330 --> 00:36:42,880
like this for your own team measuring

888
00:36:42,880 --> 00:36:44,650
the core web vitals you might be

889
00:36:44,650 --> 00:36:46,060
interested in checking out the chrome

890
00:36:46,060 --> 00:36:48,490
user experience report dashboard this is

891
00:36:48,490 --> 00:36:50,560
a great solution that just allows you to

892
00:36:50,560 --> 00:36:53,410
drop in a URL and very quickly get

893
00:36:53,410 --> 00:36:56,710
access to field data and distributions

894
00:36:56,710 --> 00:36:58,150
for the different core Web vitals

895
00:36:58,150 --> 00:37:00,880
it also summarizes the metrics so if

896
00:37:00,880 --> 00:37:02,770
you're trying to share around this

897
00:37:02,770 --> 00:37:04,360
report with other people on your team

898
00:37:04,360 --> 00:37:07,270
they'll hopefully be able to also get

899
00:37:07,270 --> 00:37:08,800
some familiarity with the core web

900
00:37:08,800 --> 00:37:12,790
vitals - we also recently shipped a new

901
00:37:12,790 --> 00:37:15,520
chrome user experience report API crux

902
00:37:15,520 --> 00:37:18,160
API this is great for programmatically

903
00:37:18,160 --> 00:37:19,690
being able to build out your own

904
00:37:19,690 --> 00:37:21,790
dashboards very similar to what we were

905
00:37:21,790 --> 00:37:23,920
just taking a look at so check that out

906
00:37:23,920 --> 00:37:27,130
too and that's it I hope that you found

907
00:37:27,130 --> 00:37:30,550
this talk useful go and optimize your

908
00:37:30,550 --> 00:37:33,370
web vitals there are plenty of Doc's

909
00:37:33,370 --> 00:37:35,530
over on web dev that cover the

910
00:37:35,530 --> 00:37:38,020
methodology the tools as well as the

911
00:37:38,020 --> 00:37:40,360
best practices that you can use to get

912
00:37:40,360 --> 00:37:42,280
fast and stay fast

913
00:37:42,280 --> 00:37:44,200
my name is addy osmani I hope this has

914
00:37:44,200 --> 00:37:45,990
been useful thank you

915
00:37:45,990 --> 00:37:52,490
[Music]

916
00:37:52,490 --> 00:37:54,680
[Applause]

